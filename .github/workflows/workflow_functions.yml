name: Workflow Functions Demo

on:
    workflow_dispatch:

jobs:
  workflow_functions_demo:
    runs-on: ubuntu-latest
    steps:
      - name: Check if string contains a word
        id: contains_check
        run: |
          input_string="Hello, world! This is a sample text."
          specific_word="sample"

          if contains("$input_string", "$specific_word"); then
            echo "The input string contains the word '$specific_word'."
            echo "Output: ${{ steps.contains_check.outputs.result }}"
          else
            echo "The input string does not contain the word '$specific_word'."
          fi

      - name: Check if string starts with a value
        id: starts_with_check
        run: |
          input_string="GitHub Actions"
          start_value="GitHub"

          if startsWith("$input_string", "$start_value"); then
            echo "The input string starts with '$start_value'."
          else
            echo "The input string does not start with '$start_value'."
          fi

      - name: Check if string ends with a value
        id: ends_with_check
        run: |
          input_string="Hello, world!"
          end_value="world!"

          if endsWith("$input_string", "$end_value"); then
            echo "The input string ends with '$end_value'."
          else
            echo "The input string does not end with '$end_value'."
          fi

      - name: Format a string
        id: format_example
        run: |
          original_string="Hello, {0}! Welcome to {1}."
          name="John"
          location="GitHub Actions"

          formatted_string=$(format("$original_string", "$name", "$location"))
          echo "Formatted String: $formatted_string"

      - name: Join values into a string
        id: join_example
        run: |
          array=("GitHub" "Actions" "Demo")
          joined_string=$(join("${{ array }}", ", "))
          echo "Joined String: $joined_string"

      - name: Convert value to JSON format
        id: to_json_example
        run: |
          value="{'key': 'value'}"
          json_value=$(toJSON("$value"))
          echo "JSON Value: $json_value"

      - name: Convert JSON value back
        id: from_json_example
        run: |
          json_value='{"key": "value"}'

          original_value=$(fromJSON("$json_value"))
          echo "Original Value: $original_value"

      - name: Hash a set of files
        id: hash_files_example
        run: |
          file_path="path/to/files/*"

          hash=$(hashFiles("$file_path"))
          echo "Hash Value: $hash"